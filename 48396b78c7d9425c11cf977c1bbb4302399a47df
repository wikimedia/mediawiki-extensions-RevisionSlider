{
  "comments": [
    {
      "key": {
        "uuid": "1dd0e9fd_f438cb25",
        "filename": "modules/ext.RevisionSlider.DiffPage.js",
        "patchSetId": 1
      },
      "lineNbr": 49,
      "author": {
        "id": 2663
      },
      "writtenOn": "2018-09-04T09:20:07Z",
      "side": 1,
      "message": "Variable declarations that don\u0027t assign a value are usually placed on the first line: https://www.mediawiki.org/wiki/Manual:Coding_conventions/JavaScript#Declarations.",
      "revId": "48396b78c7d9425c11cf977c1bbb4302399a47df",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "324fb72e_775bdcdb",
        "filename": "modules/ext.RevisionSlider.DiffPage.js",
        "patchSetId": 1
      },
      "lineNbr": 49,
      "author": {
        "id": 1453
      },
      "writtenOn": "2018-09-04T09:30:10Z",
      "side": 1,
      "message": "This sentence was added in 2015, hidden in the much bigger edit https://www.mediawiki.org/wiki/Special:Diff/1409807. I disagree both with the idea to squash multiple logical units in one line, as well with an arbitrary order that doesn\u0027t help making code easier to read. As there is no tool in place that enforces any of this I consider this merely an advice â€“ and not a good one, at least not in this situation. I will update the coding conventions accordingly.",
      "parentUuid": "1dd0e9fd_f438cb25",
      "revId": "48396b78c7d9425c11cf977c1bbb4302399a47df",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4507b3f7_f9a61be1",
        "filename": "modules/ext.RevisionSlider.DiffPage.js",
        "patchSetId": 1
      },
      "lineNbr": 49,
      "author": {
        "id": 34
      },
      "writtenOn": "2018-09-11T02:07:26Z",
      "side": 1,
      "message": "It is not the page that matters, it is our convention. And regardless of what is written on said page, it is true that we follow this in almost all MW js code. If not, then it is likely an oversight, not intentional.\n\nThis is the first time I hear active support for changing it (as opposed to not caring, and leaving it in whatever place it was to produce the smallest diff).\n\nI am totally open to changing it. But, perhaps that should be discussed and we can avoid small variations for minimal benefit, such as these?\n\nAs in other discussions, I don\u0027t actually have strong preferences for how we write our code. I\u0027ve got opinions on a few things, but by far the stronger thing I favour is consistency and ability to speed-read with the amount of least surprise or confusion. This adds to that surprise, because with the convention of assignments being after un-assignments, this looks like a mistake, and is distracting when having to understand the code.",
      "parentUuid": "324fb72e_775bdcdb",
      "revId": "48396b78c7d9425c11cf977c1bbb4302399a47df",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "315172be_01e8d6d2",
        "filename": "modules/ext.RevisionSlider.DiffPage.js",
        "patchSetId": 1
      },
      "lineNbr": 49,
      "author": {
        "id": 1453
      },
      "writtenOn": "2018-09-11T09:31:04Z",
      "side": 1,
      "message": "When I write\n\nvar $first,\n    $second,\n    $third;\n\nI don\u0027t want to be forced to squash this in one line.\n\nWhen I write\n\nvar $first,\n    $second \u003d $( \u0027.foo\u0027 ),\n    $third;\n\nI don\u0027t want to be forced to reorder this.\n\nThat\u0027s all.",
      "parentUuid": "4507b3f7_f9a61be1",
      "revId": "48396b78c7d9425c11cf977c1bbb4302399a47df",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": true
    }
  ]
}